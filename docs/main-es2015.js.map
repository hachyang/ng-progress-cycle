{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { takeWhile,tap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  max     = 1;\n  current = 0;\n\n  /// Start the timer\n  start() {\n    interval(100).pipe(\n          takeWhile(_ => !this.isFinished ),\n          tap(i => this.current += 0.1)).subscribe();\n  }\n\n   /// finish timer\n  finish() {\n    this.current = this.max;\n  }\n\n  /// reset timer\n  reset() {\n    this.current = 0;\n  }\n\n  /// Getters to prevent NaN errors\n\n  get maxVal() {\n    return isNaN(this.max) || this.max < 0.1 ? 0.1 : this.max;\n  }\n\n  get currentVal() {\n    return isNaN(this.current) || this.current < 0 ? 0 : this.current;\n  }\n\n  get isFinished() {\n    return this.currentVal >= this.maxVal;\n  }\n\n}\n\n","<main class=\"content\">\n        \n    <h1>Electron Timer</h1>\n\n    <div class=\"progress-wrapper\" *ngIf=\"maxVal\">\n\n        <div class=\"text\" *ngIf=\"!isFinished\">\n          {{ max - current | number: '1.1-1' }}\n        </div>\n        \n        <div class=\"text\" *ngIf=\"isFinished\">\n            ding!\n            <audio src=\"assets/chime.mp3\" autoplay></audio>\n        </div>\n        \n        <round-progress\n                [max]=\"max\"\n                [current]=\"current\"\n                [radius]=\"100\"\n                [stroke]=\"25\">\n        </round-progress>\n        \n    </div>\n\n    <div class=\"controls-wrapper\">\n \n        <label>Seconds</label>\n        <input class=\"input\" placeholder=\"number of seconds\" type=\"text\" \n              [(ngModel)]=\"max\"\n              (keydown)=\"reset()\">\n\n            \n        <button *ngIf=\"currentVal <= 0\" (click)=\"start()\">Start</button>\n        <button *ngIf=\"!isFinished\" (click)=\"finish()\">Finish</button>\n    </div>\n\n\n</main>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms'; \nimport { RoundProgressModule } from 'angular-svg-round-progressbar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, \n    FormsModule,\n    RoundProgressModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}