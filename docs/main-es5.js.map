{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","max","current","pipe","_","isFinished","i","subscribe","isNaN","currentVal","maxVal","reset","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { takeWhile,tap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  max     = 1;\n  current = 0;\n\n  /// Start the timer\n  start() {\n    interval(100).pipe(\n          takeWhile(_ => !this.isFinished ),\n          tap(i => this.current += 0.1)).subscribe();\n  }\n\n   /// finish timer\n  finish() {\n    this.current = this.max;\n  }\n\n  /// reset timer\n  reset() {\n    this.current = 0;\n  }\n\n  /// Getters to prevent NaN errors\n\n  get maxVal() {\n    return isNaN(this.max) || this.max < 0.1 ? 0.1 : this.max;\n  }\n\n  get currentVal() {\n    return isNaN(this.current) || this.current < 0 ? 0 : this.current;\n  }\n\n  get isFinished() {\n    return this.currentVal >= this.maxVal;\n  }\n\n}\n\n","<main class=\"content\">\n        \n    <h1>Electron Timer</h1>\n\n    <div class=\"progress-wrapper\" *ngIf=\"maxVal\">\n\n        <div class=\"text\" *ngIf=\"!isFinished\">\n          {{ max - current | number: '1.1-1' }}\n        </div>\n        \n        <div class=\"text\" *ngIf=\"isFinished\">\n            ding!\n            <audio src=\"assets/chime.mp3\" autoplay></audio>\n        </div>\n        \n        <round-progress\n                [max]=\"max\"\n                [current]=\"current\"\n                [radius]=\"100\"\n                [stroke]=\"25\">\n        </round-progress>\n        \n    </div>\n\n    <div class=\"controls-wrapper\">\n \n        <label>Seconds</label>\n        <input class=\"input\" placeholder=\"number of seconds\" type=\"text\" \n              [(ngModel)]=\"max\"\n              (keydown)=\"reset()\">\n\n            \n        <button *ngIf=\"currentVal <= 0\" (click)=\"start()\">Start</button>\n        <button *ngIf=\"!isFinished\" (click)=\"finish()\">Finish</button>\n    </div>\n\n\n</main>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms'; \nimport { RoundProgressModule } from 'angular-svg-round-progressbar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, \n    FormsModule,\n    RoundProgressModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}